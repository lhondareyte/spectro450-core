#!/bin/sh
#
# This file is part of the Spectro450 Project.
#
# Copyright (c)2019-2020,  Luc Hondareyte
#


app="spectro450"
libexec="/usr/local/libexec/${app}"
share="/usr/local/share/${app}"
fstab="/conf/base/etc/fstab"

[ -f /etc/nanobsd.conf ] && . /etc/nanobsd.conf || exit 0
[ -f ${libexec}/libapp.sh ] && . ${libexec}/libapp.sh || exit 0

grow_data_fs () {
	if [ -e /dev/${NANO_DRIVE}s4 ] ; then
		sysctl kern.geom.debugflags=16
		umount /Data
		gpart resize -i 4 -a 4k $NANO_RDRIVE
		sleep 3
		newfs -t -L SpectrOs4 /dev/${NANO_RDRIVE}s4
		rc=$?
		mount /Data
	fi
	return $rc
}

add_nullfs () {
        if [ -e /dev/ufs/SpectrOs4 ] ; then
                umount $NANO_DATADIR
                mount /dev/ufs/SpectrOs4 /mnt
		for d in Applications Library
		do
			mkdir -p /mnt/$d /$d
			printf "/Data/$d\t/$d\tnullfs ro 0 0\n"
		done >> $fstab
        fi
}

sys_config () {
        #
        # Setting kernel stuffs
        ldcf=/boot/loader.conf
        echo "autoboot_delay=\"0\"" >> $ldcf
        # Do not wait for USB devices
        echo "hw.usb.no_boot_wait=1" >> $ldcf
        echo "hw.usb.no_shutdown_wait=1" >> $ldcf
        # Disable Spectre/Meltdown patch to avoid performance problems
        echo "vm.pmap.pti=0" >> $ldcf

        # Setting /etc/sysctl.conf
        sctl=/etc/sysctl.conf
        # workaround pcm dead bug
        echo "dev.hdac.0.polling=1" >> $sctl
        # Set AC97 header as default PCM device
        echo "hw.snd.default_unit=1" >> $sctl
        # Set PCM device output level
        echo "hw.snd.vpc_0db=10" >> $sctl

        # Setting /etc/rc.conf
        rcf="/etc/rc.conf"
	for s in growfs_enable firstboot_enable cron_enable sendmail_ hostname
	do
		eval sed -i'' -e '/${s}/d' $rcf
	done
        echo "hostname=$app" >> $rcf
        echo "cron_enable=\"NO\"" >> $rcf
        echo "sendmail_submit_enable=\"NO\"" >> $rcf
        echo "sendmail_outbound_enable=\"NO\"" >> $rcf
        echo "sendmail_msp_queue_enable=\"NO\"" >> $rcf
	if [ -x /usr/local/etc/rc.d/jackd ] ; then
        	echo "jackd_enable=\"YES\"" >> $rcf
	fi
}

firstboot_start () 
{
	grow_data_fs
	sleep 2
	printf "Setting up Spectro450..."
	# mount / rw if needed
	f_mount=$(mount -p / | awk '{print $4}')
	if [ "$f_mount" = "ro" ] ; then
        	mount -orw /
	fi
	# 
        # Locking application package
	pkg info $app > /dev/null 2>&1
	if [ $? -eq 0 ] ; then
		/usr/sbin/pkg lock -y $app > /dev/null 2>&1
	fi
	#
	# Install configuration file
	echo "APP=\"NONE\"" > /etc/${app}.conf
	if [ -e /dev/tinyVT ] ; then
		echo "TERM=\"tinyVT\"" >> /etc/${app}.conf
		echo "TTY=\"/dev/tinyVT\"" >> /etc/${app}.conf
	elif [ -e /dev/tinyVT-II ] ; then
		echo "TERM=\"tinyVT-II\"" >> /etc/${app}.conf
		echo "TTY=\"/dev/tinyVT-II\"" >> /etc/${app}.conf
	else
		echo "TERM=\"xterm\"" >> /etc/${app}.conf
		echo "TTY=\"/dev/console\"" >> /etc/${app}.conf
	fi

	#
	sys_config
	add_nullfs
	SaveSomeFiles rc.conf ${app}.conf sysctl.conf
	if [ $? -eq 0 ] ; then
		rm -f /firstboot
		echo "done."
	else
		echo "failed."
	fi
	# Create mount point for USB drive
	mkdir -p $media
	sync;sync;sync
        mount -o ro /
	sleep 1
	Reboot
}

firstboot_start
